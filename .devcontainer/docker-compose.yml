version: '3.8'

networks:
  infradev:


volumes:
  crdb:
    null

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VARIANT: 1.22-bullseye
        NODE_VERSION: "none"
    command: sleep infinity
# uncomment along with bind volume to use SSH for dev container access
#    ports:
#      - "127.0.0.1:2224:2222"
    env_file:
      - .env
    volumes:
      - ./nsc:/nsc
      - ./nats:/nats
      - ..:/workspace:cached
#      - type: bind
#        source: ~/.ssh/authorized_keys
#        target: /home/vscode/.ssh/authorized_keys
#        read_only: true
    networks:
      - infradev
    # Use "forwardPorts" in **devcontainer.json** to forward a port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)


  # Environment setup
  create_databases:
    image: cockroachdb/cockroach:v23.2.3
    restart: on-failure:5
    command: |
      sql --insecure -e '
        CREATE DATABASE IF NOT EXISTS permissionsapi;
        CREATE DATABASE IF NOT EXISTS spicedb;
      '
    env_file:
      - .env
    depends_on:
      crdb:
        condition: service_healthy
    networks:
      - infradev

  migrate_spicedb:
    image: authzed/spicedb:v1.23.1
    command: migrate head
    restart: on-failure:5
    env_file:
      - .env
    depends_on:
      create_databases:
        condition: service_completed_successfully
    networks:
      - infradev

  # Required services (databases, etc)
  crdb:
    image: cockroachdb/cockroach:v23.2.3
    command: start-single-node --insecure
    restart: unless-stopped
    volumes:
      - crdb:/cockroach/cockroach-data
    env_file:
      - .env
    healthcheck:
      test: "curl --fail http://localhost:8080/health?ready=1 || exit 1"
      interval: "2s"
      retries: 3
      start_period: "15s"
      timeout: "5s"
    networks:
      - infradev

  spicedb:
    image: authzed/spicedb:v1.23.1
    command: serve
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      migrate_spicedb:
        condition: service_completed_successfully
    networks:
      - infradev

  nats-init:
    image: natsio/nats-box
    environment:
      - NSC_HOME=/nsc
    volumes:
      - ./nsc:/nsc
      - ./nats:/nats
      - ./scripts:/scripts
    command:
      - /scripts/nats_init.sh

  nats:
    image: 'nats:alpine'
    depends_on:
      - nats-init
    command:
      - -c
      - '/etc/nats/nats-server.conf'
      - -D
    volumes:
      - ./nats/:/etc/nats
    restart: unless-stopped
    networks:
      - infradev

  jaeger:
    image: jaegertracing/all-in-one:1.56.0
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - 16688:16686
    networks:
      - infradev

  mock-oauth2-server:
    image: ghcr.io/navikt/mock-oauth2-server:2.1.3
    networks:
      - infradev
    environment:
      - PORT=8081
    ports:
      - 8081:8081
